{"version":3,"sources":["logo.svg","Components/pageHome.js","Components/pageLiftingSU.js","Components/pageHooks.js","Components/pageRedux.js","Actions/index.js","Components/pageTodoList.js","Components/consumeAPI.js","Components/footer.js","App.js","serviceWorker.js","reducers/todo.js","reducers/index.js","index.js"],"names":["module","exports","Home","className","scaleNames","s","m","toSecond","minute","toMinute","second","tryConvert","time","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","TimeInput","props","handleChange","bind","event","this","onTimeChange","target","value","scale","onChange","Component","CalculatorTime","handleSecondChange","handleMinuteChange","state","setState","scaleName","gr","kg","toGram","kilogram","toKilogram","gram","tryConverts","weight","WeightInput","onWeightChange","CalculatorWeight","handleGramChange","handleKilogramChange","Konversi","src","logo","alt","Hooks","useState","count","setCount","useEffect","document","title","console","log","onClick","Reduxs","dispatch","useDispatch","counter","useSelector","style","display","flexDirection","width","a","setTimeout","type","TodoList","todo","todoRef","React","createRef","handleNewTodo","e","todoClone","newTodo","current","push","preventDefault","onSubmit","ref","map","item","index","key","ConsumeAPI","items","isLoading","fetch","then","response","json","data","author","Footer","href","rel","App","to","exact","component","path","Boolean","window","location","hostname","match","action","combineReducers","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ddd13426.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport '../App.css';\r\n\r\nexport default function Home() {\r\n    return( \r\n        <div className=\"Content\">\r\n            {/* eslint-disable-next-line */}\r\n            <h2>Hi, I'm Agung Tri Prasetyo ðŸ‘‹</h2>\r\n            <p> I do big apologize to you Mr. Arjun, I still know very little and still don't understand much much much much moreeee about react.\r\n                Actually I could not find an idea. So to fulfill points in the rules of the project, I summarized what I had done during bootcamp on this website project.\r\n            </p>\r\n        </div>\r\n    );\r\n  }","import React,{Component} from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\n\r\n// =========Nomor 1 Detik - Menit===========\r\n\r\nconst scaleNames = {\r\n  s: 'Second',\r\n  m: 'Minute'\r\n};\r\n\r\nfunction toSecond(minute) {\r\n  return minute*60;\r\n}\r\n\r\nfunction toMinute(second) {\r\n  return second/60;\r\n}\r\n\r\nfunction tryConvert(time, convert) {\r\n  const input = parseFloat(time);\r\n  if (Number.isNaN(input)) {\r\n    return '';\r\n  }\r\n  const output = convert(input);\r\n  const rounded = Math.round(output * 1000) / 1000;\r\n  return rounded.toString();\r\n}\r\n\r\nclass TimeInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.onTimeChange(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const time = this.props.time;\r\n    const scale = this.props.scale;\r\n    return (\r\n      <fieldset>\r\n        <legend>Enter time in {scaleNames[scale]}:</legend>\r\n        <input value={time}\r\n               onChange={this.handleChange} />\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n\r\nclass CalculatorTime extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSecondChange = this.handleSecondChange.bind(this);\r\n    this.handleMinuteChange = this.handleMinuteChange.bind(this);\r\n    this.state = {time: '', scale: 's'};\r\n  }\r\n\r\n  handleSecondChange(time) {\r\n    this.setState({scale: 's', time});\r\n  }\r\n\r\n  handleMinuteChange(time) {\r\n    this.setState({scale: 'm', time});\r\n  }\r\n\r\n  render() {\r\n    const scale = this.state.scale;\r\n    const time = this.state.time;\r\n    const second = scale === 'm' ? tryConvert(time, toSecond) : time;\r\n    const minute = scale === 's' ? tryConvert(time, toMinute) : time;\r\n\r\n    return (\r\n      <div>\r\n        <fieldset>\r\n          <legend>Second to Minute Converter</legend>\r\n          <TimeInput\r\n            scale=\"s\"\r\n            time={second}\r\n            onTimeChange={this.handleSecondChange} />\r\n          <TimeInput\r\n            scale=\"m\"\r\n            time={minute}\r\n            onTimeChange={this.handleMinuteChange} />\r\n        </fieldset>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// =========Nomor 2 Gram - Kilogram===========\r\nconst scaleName = {\r\n  gr: 'Gram',\r\n  kg: 'Kilogram'\r\n};\r\n\r\nfunction toGram(kilogram) {\r\n  return kilogram*1000;\r\n}\r\n\r\nfunction toKilogram(gram) {\r\n  return gram/1000;\r\n}\r\n\r\nfunction tryConverts(weight, convert) {\r\n  const input = parseFloat(weight);\r\n  if (Number.isNaN(input)) {\r\n    return '';\r\n  }\r\n  const output = convert(input);\r\n  const rounded = Math.round(output * 1000) / 1000;\r\n  return rounded.toString();\r\n}\r\n\r\nclass WeightInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.onWeightChange(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const weight = this.props.weight;\r\n    const scale = this.props.scale;\r\n    return (\r\n      <fieldset>\r\n        <legend>Enter time in {scaleName[scale]}:</legend>\r\n        <input value={weight}\r\n               onChange={this.handleChange} />\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n\r\nexport class CalculatorWeight extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleGramChange = this.handleGramChange.bind(this);\r\n    this.handleKilogramChange = this.handleKilogramChange.bind(this);\r\n    this.state = {weight: '', scale: 'gr'};\r\n  }\r\n\r\n  handleGramChange(weight) {\r\n    this.setState({scale: 'gr', weight});\r\n  }\r\n\r\n  handleKilogramChange(weight) {\r\n    this.setState({scale: 'kg', weight});\r\n  }\r\n\r\n  render() {\r\n    const scale = this.state.scale;\r\n    const weight = this.state.weight;\r\n    const gram = scale === 'kg' ? tryConverts(weight, toGram) : weight;\r\n    const kilogram = scale === 'gr' ? tryConverts(weight, toKilogram) : weight;\r\n\r\n    return (\r\n      <div>\r\n        <fieldset>\r\n        <legend>Gram to Kilogram Converter</legend>\r\n          <WeightInput\r\n            scale=\"gr\"\r\n            weight={gram}\r\n            onWeightChange={this.handleGramChange} />\r\n          <WeightInput\r\n            scale=\"kg\"\r\n            weight={kilogram}\r\n            onWeightChange={this.handleKilogramChange} />\r\n        </fieldset>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function Konversi() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <div className=\"display\">\r\n          <CalculatorTime/>\r\n          <CalculatorWeight/>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport logo from '../logo.svg'\r\nexport default function Hooks() {\r\n  const [count, setCount] = useState(0);\r\n\r\n//   didupdate didmount\r\n  useEffect(() => {\r\n    document.title = `You clicked ${count} times`;\r\n  },[count])\r\n\r\n//   unmount \r\n  useEffect(() => {\r\n    console.log('Unmounting');\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"App App-header\">\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <p>You Clicked {count} Times</p>\r\n      <button className=\"button-style\" onClick={() => setCount(count + 1)}>Add</button>\r\n      <button className=\"button-style\"onClick={() => setCount(0)}>Clear</button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { incrementAsync, decrementAsync } from '../Actions';\r\nimport '../App.css';\r\nimport logo from '../logo.svg'\r\n\r\nfunction Reduxs() {\r\n  const dispatch = useDispatch();\r\n  const counter = useSelector(state => state.counter);\r\n\r\n  const _add = () => {\r\n    dispatch(incrementAsync());\r\n  }\r\n\r\n  const _substract = () => {\r\n    dispatch(decrementAsync());\r\n  }\r\n\r\n  return (\r\n    <div className=\"App App-header\">\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <div>Counter: {counter}</div>\r\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n        <button className=\"button-style\" style={{ width: 100 }} onClick={_substract}>-</button>\r\n        <button className=\"button-style\" style={{ width: 100 }} onClick={_add}>+</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reduxs;","const _add = () => ({\r\n    type: 'ADD'\r\n})\r\n\r\nconst _substract = () => ({\r\n    type: 'SUBSTRACT'\r\n})\r\n\r\nexport function incrementAsync() {\r\n    return async (dispatch) => {\r\n        // const response = await fetch('http://newsapi.org/v2/everything?q=apple&from=2020-07-02&to=2020-07-02&sortBy=popularity&apiKey=9166bcc7e93b48d09be0f264ac02dfbd');\r\n        // dispatch({\r\n        //     type: 'GET_DATA',\r\n        //     payload: response.json()\r\n        // })\r\n\r\n        setTimeout(() => {\r\n            dispatch(_add());\r\n        }, 100)\r\n    }\r\n}\r\n\r\nexport function decrementAsync() {\r\n    return async (dispatch) => {\r\n        // const response = await fetch('http://newsapi.org/v2/everything?q=apple&from=2020-07-02&to=2020-07-02&sortBy=popularity&apiKey=9166bcc7e93b48d09be0f264ac02dfbd');\r\n        // dispatch({\r\n        //     type: 'GET_DATA',\r\n        //     payload: response.json()\r\n        // })\r\n        \r\n        setTimeout(() => {\r\n            dispatch(_substract());\r\n        }, 100)\r\n    }\r\n}   ","import React,{Component} from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nexport default class TodoList extends Component{\r\n    state = {\r\n        todo:[]\r\n    }\r\n\r\n    todoRef = React.createRef();\r\n\r\n    handleNewTodo = (e) => {\r\n        let todoClone = [...this.state.todo];\r\n        let newTodo = this.todoRef.current.value;\r\n        todoClone.push(newTodo);\r\n        this.setState({todo : todoClone});\r\n        \r\n        e.preventDefault();\r\n        this.todoRef.current.value = '';\r\n    }\r\n\r\n    render(){\r\n        const {todo} = this.state;\r\n\r\n        return(\r\n            <div className=\"App App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <div>Todo List</div>\r\n                <form onSubmit = {this.handleNewTodo}>\r\n                    <label>New Todo <input ref={this.todoRef} /></label>\r\n                </form>\r\n                <ul>{todo.map((item,index) => <li key={index}>{item}</li>)}</ul>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport '../App.css';\r\n\r\nexport default class ConsumeAPI extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            items : [],\r\n            isLoading : true\r\n        }\r\n    }\r\n\r\n    coomponentDidMount(){\r\n        fetch(\"http://newsapi.org/v2/everything?q=apple&from=2020-07-02&to=2020-07-02&sortBy=popularity&apiKey=9166bcc7e93b48d09be0f264ac02dfbd\")\r\n            .then(response => response.json())\r\n            .then(data => this.setState({items:data,isLoading:false}))\r\n    }\r\n\r\n    render(){\r\n        const {items,isLoading} = this.state\r\n        if(isLoading){\r\n            return(\r\n            <div className=\"Content\">\r\n                <p>Loading.....</p>\r\n            </div>);\r\n        }\r\n        return(\r\n            <div className=\"Content\">   \r\n                <ul>\r\n                    {items.map((item,index) => <li key={index}>{item.author}</li>)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport '../App.css';\r\n\r\nexport default function Footer() {\r\n    return( \r\n        <div className=\"Footer\">\r\n            <h3>Let's be friend</h3>\r\n            <div className=\"social-icon\">\r\n\t\t\t\t<a href=\"https://twitter.com/agungtpras\" target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a>\r\n\t\t\t\t<a href=\"https://twitter.com/agungtpras\" target=\"_blank\" rel=\"noopener noreferrer\">Telegram</a>\r\n\t\t\t\t<a href=\"https://twitter.com/agungtpras\" target=\"_blank\" rel=\"noopener noreferrer\">Linked In</a>\r\n\t\t\t\t<a href=\"https://twitter.com/agungtpras\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\r\n\t\t\t\t<a href=\"https://twitter.com/agungtpras\" target=\"_blank\" rel=\"noopener noreferrer\">Dribbble</a>\r\n\t\t\t</div>\r\n            <small><a href=\"https://twitter.com/agungtpras\" target=\"_blank\" rel=\"noopener noreferrer\">auf@tuta.io</a> Â© Auf. All Rights Reserved.</small>\r\n        </div>\r\n    );\r\n  }","import React from \"react\";\nimport './App.css';\nimport logo from './logo.svg';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {Home,Konversi, Hooks, TodoList, Reduxs,ConsumeAPI,Footer} from './Components'\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <div className=\"logo\">\n            <Link to=\"/\">\n              <img src={logo} alt=\"logo\" />\n            </Link>\n          </div>\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/lifting-state-up\">Lifting State Up</Link></li>\n            <li><Link to=\"/hooks-context\">Hooks</Link></li>\n            <li><Link to=\"/redux\">Redux</Link></li>\n            <li><Link to=\"/todolist\">List</Link></li>\n            <li><Link to=\"/consumeAPI\">API</Link></li>\n          </ul>\n        </nav>      \n\n        <Switch>\n            <Route exact component = {Konversi} path=\"/lifting-state-up\"/>\n            <Route exact component = {Hooks} path=\"/hooks-context\" />\n            <Route exact component = {Reduxs} path=\"/redux\" />\n            <Route exact component = {TodoList} path=\"/todolist\" />\n            <Route exact component = {ConsumeAPI} path=\"/consumeAPI\" />\n            <Route exact component = {Home} path=\"/\" />\n        </Switch>\n      </div>\n      <Footer/>\n    </Router>\n    \n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const counter = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            return state + 1\r\n        case 'SUBSTRACT':\r\n            return state - 1\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counter;","import { combineReducers } from 'redux';\r\nimport counter from './todo';\r\n\r\nexport default combineReducers({ counter });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducers';\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}